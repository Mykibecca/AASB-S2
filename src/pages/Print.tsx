import { useEffect, useMemo, useState } from 'react';
import { storage } from '@/lib/storage';
import { questionnaireDef, scoreAnswers, ApplicabilityProfile } from '@/lib/logicEngine';

export default function Print() {
  const [answers, setAnswers] = useState<Record<string, any>>({});
  const [company, setCompany] = useState<any>({});
  const [classification, setClassification] = useState<any>(null);
  const [sections, setSections] = useState<string[]>([]);

  useEffect(() => {
    setAnswers(storage.getQuestionnaire());
    setCompany(storage.getCompanyProfile() || {});
    setClassification(storage.getClassification());
    try {
      const url = new URL(window.location.href);
      const raw = url.searchParams.get('sections');
      if (raw) setSections(JSON.parse(decodeURIComponent(raw)));
    } catch {}
  }, []);

  const profile: ApplicabilityProfile | null = classification ? {
    entityGroup: (classification.group === 'not-required' ? 'voluntary' : classification.group),
    firstReportingFY: classification.reportingStart || '',
  } as ApplicabilityProfile : null;

  const scoring = useMemo(() => profile ? scoreAnswers(answers, profile) : null, [answers, profile]);

  return (
    <div className="p-8 space-y-8" style={{ overflowWrap: 'anywhere' }}>
      {/* Cover Page */}
      <section className="cover-page">
        <div className="cover-logo">ESG</div>
        <div className="cover-title">AASB S2 Readiness Assessment Report</div>
        <div className="cover-subtitle">Generated by ESG Disclosure Suite</div>
        <div className="cover-meta">Company: {company?.companyName || 'N/A'}</div>
        <div className="cover-meta">Date: {new Date().toLocaleDateString()}</div>
      </section>
      {/* Executive Summary removed by requirement */}

      {sections.includes('company-profile') && (
        <section className="print-section section">
          <h2 className="text-xl font-semibold mb-2">Company Profile</h2>
          <div className="grid grid-cols-2 gap-2 text-sm">
            <div><strong>Company:</strong> {company?.companyName || 'N/A'}</div>
            <div><strong>Industry:</strong> {company?.industry || 'N/A'}</div>
            <div><strong>Size:</strong> {company?.size || 'N/A'}</div>
            <div><strong>ASX Listed:</strong> {company?.asxListed || 'N/A'}</div>
          </div>
        </section>
      )}

      {sections.includes('responses') && (
        <section className="print-section section">
          <h2 className="text-xl font-semibold mb-2">Question Responses</h2>
          <table className="w-full text-sm border-collapse">
            <thead>
              <tr className="border-b"><th className="text-left p-2">ID</th><th className="text-left p-2">Question</th><th className="text-left p-2">Answer</th><th className="text-left p-2">Score</th><th className="text-left p-2">Clause</th></tr>
            </thead>
            <tbody>
              {questionnaireDef.sections.flatMap(s => s.questions).map(q => {
                const ans = (answers as any)[q.id];
                const sev = ans?.severity;
                const label = typeof sev === 'number' ? (q.answers.find(a => a.score === sev)?.label || sev) : 'N/A';
                return (
                  <tr key={q.id} className="border-b">
                    <td className="p-2">{q.id}</td>
                    <td className="p-2">{q.question}</td>
                    <td className="p-2">{String(label)}</td>
                    <td className="p-2">{String(sev ?? 'N/A')}</td>
                    <td className="p-2">{q.relevantClause || ''}</td>
                  </tr>
                );
              })}
            </tbody>
          </table>
        </section>
      )}

      {sections.includes('gaps-analysis') && (
        <section className="print-section section">
          <h2 className="text-xl font-semibold mb-4 text-brand-navy">Gaps Analysis</h2>
          <div className="space-y-4">
            {(scoring?.gapsDetailed || []).map((g) => {
              const badgeClass = g.priority === 'High' ? 'badge-high' : g.priority === 'Medium' ? 'badge-medium' : 'badge-low';
              return (
                <div key={g.id} className="gap-card border rounded-lg shadow-sm p-4 bg-white" style={{ breakInside: 'avoid' }}>
                  <div className="flex items-start justify-between gap-3">
                    <h3 className="font-semibold text-brand-navy leading-snug">{g.question}</h3>
                    <span className={`text-xs px-2 py-0.5 rounded-full whitespace-nowrap ${badgeClass}`}>{g.priority}</span>
                  </div>
                  <div className="mt-2 text-sm text-foreground">
                    {g.gapDescription || g.description}
                  </div>
                  {g.recommendation && (
                    <div className="mt-2 text-sm italic text-brand-teal">
                      Recommendation: {g.recommendation}
                    </div>
                  )}
                  <div className="mt-2 text-xs text-muted-foreground">
                    AASB S2 Clause: {g.relevantClause || '—'}
                  </div>
                </div>
              );
            })}
          </div>
        </section>
      )}

      {/* Recommendations removed by requirement */}

      {sections.includes('appendices') && (
        <section className="print-section section">
          <h2 className="text-xl font-semibold mb-2">Appendices</h2>
          <div className="space-y-4">
            <div className="text-sm text-muted-foreground">
              The full AASB S2 Standard will be appended to this PDF to ensure offline accessibility.
            </div>
            <figure className="mt-3">
              <img style={{ width: '100%', height: 'auto' }} src="https://standards.auasb.gov.au/sites/default/files/2025-03/ASSA5010_Appendix.PNG" alt="ASSA 5010 Appendix" />
              <figcaption className="text-xs text-muted-foreground">
                Source: ASSA 5010 Appendix (AUASB, Jan 2025) – <a className="underline" href="https://standards.auasb.gov.au/assa-5010-jan-2025">https://standards.auasb.gov.au/assa-5010-jan-2025</a>
              </figcaption>
            </figure>
          </div>
        </section>
      )}
    </div>
  );
}


